.mdc-slider {
  --_active-track-color: var(
    --md-slider-active-track-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_active-track-height: var(--md-slider-active-track-height, 4px);
  --_active-track-shape: var(--md-slider-active-track-shape, 9999px);
  --_disabled-active-track-color: var(
    --md-slider-disabled-active-track-color,
    var(--md-sys-color-on-surface, #1d1b20)
  );
  --_disabled-active-track-opacity: var(
    --md-slider-disabled-active-track-opacity,
    0.38
  );
  --_disabled-handle-color: var(
    --md-slider-disabled-handle-color,
    var(--md-sys-color-on-surface, #1d1b20)
  );
  --_disabled-handle-elevation: var(--md-slider-disabled-handle-elevation, 0);
  --_disabled-inactive-track-color: var(
    --md-slider-disabled-inactive-track-color,
    var(--md-sys-color-on-surface, #1d1b20)
  );
  --_disabled-inactive-track-opacity: var(
    --md-slider-disabled-inactive-track-opacity,
    0.12
  );
  --_focus-handle-color: var(
    --md-slider-focus-handle-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_handle-color: var(
    --md-slider-handle-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_handle-elevation: var(--md-slider-handle-elevation, 1);
  --_handle-height: var(--md-slider-handle-height, 20px);
  --_handle-shadow-color: var(
    --md-slider-handle-shadow-color,
    var(--md-sys-color-shadow, #000)
  );
  --_handle-shape: var(--md-slider-handle-shape, 9999px);
  --_handle-width: var(--md-slider-handle-width, 20px);
  --_hover-handle-color: var(
    --md-slider-hover-handle-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_hover-state-layer-color: var(
    --md-slider-hover-state-layer-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_hover-state-layer-opacity: var(
    --md-slider-hover-state-layer-opacity,
    0.08
  );
  --_inactive-track-color: var(
    --md-slider-inactive-track-color,
    var(--md-sys-color-surface-container-highest, #e6e0e9)
  );
  --_inactive-track-height: var(--md-slider-inactive-track-height, 4px);
  --_inactive-track-shape: var(--md-slider-inactive-track-shape, 9999px);
  --_label-container-color: var(
    --md-slider-label-container-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_label-container-height: var(--md-slider-label-container-height, 28px);
  --_label-label-text-color: var(
    --md-slider-label-label-text-color,
    var(--md-sys-color-on-primary, #fff)
  );
  --_label-label-text-type: var(
    --md-slider-label-label-text-type,
    var(
      --md-sys-typescale-label-medium,
      500 0.75rem/1rem var(--md-ref-typeface-plain, Roboto)
    )
  );
  --_pressed-handle-color: var(
    --md-slider-pressed-handle-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_pressed-state-layer-color: var(
    --md-slider-pressed-state-layer-color,
    var(--md-sys-color-primary, #6750a4)
  );
  --_pressed-state-layer-opacity: var(
    --md-slider-pressed-state-layer-opacity,
    0.12
  );
  --_state-layer-size: var(--md-slider-state-layer-size, 40px);
  --_with-overlap-handle-outline-color: var(
    --md-slider-with-overlap-handle-outline-color,
    var(--md-sys-color-on-primary, #fff)
  );
  --_with-overlap-handle-outline-width: var(
    --md-slider-with-overlap-handle-outline-width,
    1px
  );
  --_with-tick-marks-active-container-color: var(
    --md-slider-with-tick-marks-active-container-color,
    var(--md-sys-color-on-primary, #fff)
  );
  --_with-tick-marks-container-size: var(
    --md-slider-with-tick-marks-container-size,
    2px
  );
  --_with-tick-marks-disabled-container-color: var(
    --md-slider-with-tick-marks-disabled-container-color,
    var(--md-sys-color-on-surface, #1d1b20)
  );
  --_with-tick-marks-inactive-container-color: var(
    --md-slider-with-tick-marks-inactive-container-color,
    var(--md-sys-color-on-surface-variant, #49454f)
  );
  --md-elevation-level: var(--_handle-elevation);
  --md-elevation-shadow-color: var(--_handle-shadow-color);
  display: inline-flex;
  min-inline-size: 200px;
  vertical-align: middle;
  .mdc-elevation {
    transition-duration: 0.25s;
  }
  @media (prefers-reduced-motion) {
    .label {
      transition-duration: 0;
    }
  }
  &:disabled {
    --md-elevation-level: var(--_disabled-handle-elevation);
    opacity: var(--_disabled-active-track-opacity);
  }
  .container {
    block-size: var(--_state-layer-size);
    flex: 1;
    pointer-events: none;
    position: relative;
    touch-action: none;
  }
  .container,
  .track {
    align-items: center;
    display: flex;
  }
  .track {
    inset: 0;
    position: absolute;
  }
  .track:after,
  .track:before {
    background-size: calc(
        (100% - var(--_with-tick-marks-container-size) * 2) /
          var(--slider-tick-count)
      )
      100%;
    content: '';
    inset-inline-end: calc(
      var(--_state-layer-size) / 2 - var(--_with-tick-marks-container-size)
    );
    inset-inline-start: calc(
      var(--_state-layer-size) / 2 - var(--_with-tick-marks-container-size)
    );
    position: absolute;
  }
  .track:before {
    background-color: var(--_inactive-track-color);
    block-size: var(--_inactive-track-height);
    border-radius: var(--_inactive-track-shape);
  }
  .track.tickMarks:before {
    background-image: radial-gradient(
      circle at var(--_with-tick-marks-container-size) center,
      var(--_with-tick-marks-inactive-container-color) 0,
      var(--_with-tick-marks-inactive-container-color)
        calc(var(--_with-tick-marks-container-size) / 2),
      transparent calc(var(--_with-tick-marks-container-size) / 2)
    );
  }
  &[disabled] .track:before {
    background-color: var(--_disabled-inactive-track-color);
    opacity: calc(
      1 / var(--_disabled-active-track-opacity) *
        var(--_disabled-inactive-track-opacity)
    );
  }
  .track:after {
    background-color: var(--_active-track-color);
    block-size: var(--_active-track-height);
    border-radius: var(--_active-track-shape);
    -webkit-clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
    );
    clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
    );
  }
  &[dir='rtl'] .track:after {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
    clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
  }
  &:dir(rtl) .track:after {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
    clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
  }
  .track:dir(rtl):after {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
    clip-path: inset(
      0
        calc(
          var(--_with-tick-marks-container-size) *
            min(var(--slider-lower-fraction) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            var(--slider-lower-fraction)
        )
        0
        calc(
          var(--_with-tick-marks-container-size) *
            min((1 - var(--slider-upper-fraction)) * 1000000000, 1) +
            (100% - var(--_with-tick-marks-container-size) * 2) *
            (1 - var(--slider-upper-fraction))
        )
    );
  }
  .track.tickMarks:after {
    background-image: radial-gradient(
      circle at var(--_with-tick-marks-container-size) center,
      var(--_with-tick-marks-active-container-color) 0,
      var(--_with-tick-marks-active-container-color)
        calc(var(--_with-tick-marks-container-size) / 2),
      transparent calc(var(--_with-tick-marks-container-size) / 2)
    );
  }
  &:disabled .track:after {
    background-color: var(--_disabled-active-track-color);
  }
  &:disabled .track.tickMarks:after,
  &:disabled .track.tickMarks:before {
    background-image: radial-gradient(
      circle at var(--_with-tick-marks-container-size) center,
      var(--_with-tick-marks-disabled-container-color) 0,
      var(--_with-tick-marks-disabled-container-color)
        calc(var(--_with-tick-marks-container-size) / 2),
      transparent calc(var(--_with-tick-marks-container-size) / 2)
    );
  }
  .handleContainerPadded {
    padding-inline: calc(var(--_state-layer-size) / 2);
  }
  .handleContainerBlock,
  .handleContainerPadded {
    block-size: 100%;
    inline-size: 100%;
    position: relative;
  }
  .handleContainer {
    inline-size: calc(
      100% * (var(--slider-upper-fraction) - var(--slider-lower-fraction))
    );
    inset-block-end: 0;
    inset-block-start: 0;
    inset-inline-start: calc(100% * var(--slider-lower-fraction));
    position: absolute;
  }
  .handle {
    block-size: var(--_state-layer-size);
    display: grid;
    inline-size: var(--_state-layer-size);
    place-items: center;
    position: absolute;
  }
  .handle,
  .handleNub {
    border-radius: var(--_handle-shape);
  }
  .handleNub {
    background: var(--_handle-color);
    height: var(--_handle-height);
    position: absolute;
    width: var(--_handle-width);
  }
  &:disabled .handleNub {
    background: var(--_disabled-handle-color);
  }
  input.a:focus ~ .handleContainerPadded .handle.a > .handleNub,
  input.b:focus ~ .handleContainerPadded .handle.b > .handleNub {
    background: var(--_focus-handle-color);
  }
  .container > .handleContainerPadded .handle.hover > .handleNub {
    background: var(--_hover-handle-color);
  }
  &:not(disabled)
    input.a:active
    ~ .handleContainerPadded
    .handle.a
    > .handleNub,
  &:not(disabled)
    input.b:active
    ~ .handleContainerPadded
    .handle.b
    > .handleNub {
    background: var(--_pressed-handle-color);
  }
  .onTop.isOverlapping .handleNub,
  .onTop.isOverlapping .label,
  .onTop.isOverlapping .label:before {
    border: var(--_with-overlap-handle-outline-color) solid
      var(--_with-overlap-handle-outline-width);
  }
  .handle.lesser {
    inset-inline-start: calc(0px - var(--_state-layer-size) / 2);
  }
  .handle:not(.lesser) {
    inset-inline-end: calc(0px - var(--_state-layer-size) / 2);
  }
  .label {
    background: var(--_label-container-color);
    border-radius: 9999px;
    box-sizing: border-box;
    color: var(--_label-label-text-color);
    display: grid;
    font: var(--_label-label-text-type);
    inset-block-end: 100%;
    min-block-size: var(--_label-container-height);
    min-inline-size: var(--_label-container-height);
    padding: 4px;
    place-items: center;
    position: absolute;
    transform: scale(0);
    transform-origin: center bottom;
    transition: transform 0.1s cubic-bezier(0.2, 0, 0, 1);
  }
  .handleContainer.hover .label,
  &:focus-within .label {
    transform: scale(1);
  }
  .label:after,
  .label:before {
    background: inherit;
    content: '';
    display: block;
    position: absolute;
  }
  .label:before {
    block-size: calc(var(--_label-container-height) / 2);
    bottom: calc(var(--_label-container-height) / -10);
    inline-size: calc(var(--_label-container-height) / 2);
    transform: rotate(45deg);
  }
  .label:after {
    border-radius: inherit;
    inset: 0;
  }
  .labelContent {
    z-index: 1;
  }
  input[type='range'] {
    -webkit-tap-highlight-color: transparent;
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    box-sizing: border-box;
    cursor: pointer;
    height: 100%;
    margin: 0;
    opacity: 0;
    pointer-events: auto;
    position: absolute;
    width: 100%;
  }
  input[type='range']:focus {
    outline: none;
  }
  ::-webkit-slider-runnable-track {
    -webkit-appearance: none;
  }
  ::-moz-range-track {
    appearance: none;
  }
  ::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    block-size: var(--_state-layer-size);
    inline-size: var(--_state-layer-size);
    opacity: 0;
    transform: scaleX(0);
    z-index: 2;
  }
  ::-moz-range-thumb {
    appearance: none;
    block-size: var(--_state-layer-size);
    inline-size: var(--_state-layer-size);
    opacity: 0;
    transform: scaleX(0);
    z-index: 2;
  }
  .ranged input.lesser {
    -webkit-clip-path: inset(
      0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
    clip-path: inset(
      0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
  }
  &[dir='rtl'] .ranged input.lesser {
    -webkit-clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
    clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
  }
  &:dir(rtl) .ranged input.lesser {
    -webkit-clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
    clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
  }
  .ranged input.lesser:dir(rtl) {
    -webkit-clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
    clip-path: inset(
      0 0 0
        calc(
          100% - var(--_state-layer-size) / 2 -
            (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
  }
  .ranged input:not(.lesser) {
    -webkit-clip-path: inset(
      0 0 0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
    clip-path: inset(
      0 0 0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
    );
  }
  &[dir='rtl'] .ranged input:not(.lesser) {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
    clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
  }
  &:dir(rtl) .ranged input:not(.lesser) {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
    clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
  }
  .ranged input:dir(rtl):not(.lesser) {
    -webkit-clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
    clip-path: inset(
      0
        calc(
          var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) *
            (
              var(--slider-lower-fraction) +
                (var(--slider-upper-fraction) - var(--slider-lower-fraction)) /
                2
            )
        )
        0 0
    );
  }
  .onTop {
    z-index: 1;
  }
  md-focus-ring {
    --md-focus-ring-outward-offset: -2px;
  }
  .handle {
    --md-ripple-hover-color: var(--_hover-state-layer-color);
    --md-ripple-hover-opacity: var(--_hover-state-layer-opacity);
    --md-ripple-pressed-color: var(--_pressed-state-layer-color);
    --md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity);
  }
  .mdc-ripple {
    height: var(--_state-layer-size);
    width: var(--_state-layer-size);
  }
}

@media (forced-colors: active) {
  .mdc-slider {
    --md-slider-active-track-color: CanvasText;
    --md-slider-disabled-active-track-color: GrayText;
    --md-slider-disabled-active-track-opacity: 1;
    --md-slider-disabled-handle-color: GrayText;
    --md-slider-disabled-inactive-track-color: GrayText;
    --md-slider-disabled-inactive-track-opacity: 1;
    --md-slider-focus-handle-color: CanvasText;
    --md-slider-handle-color: CanvasText;
    --md-slider-handle-shadow-color: Canvas;
    --md-slider-hover-handle-color: CanvasText;
    --md-slider-hover-state-layer-color: Canvas;
    --md-slider-hover-state-layer-opacity: 1;
    --md-slider-inactive-track-color: Canvas;
    --md-slider-label-container-color: Canvas;
    --md-slider-label-label-text-color: CanvasText;
    --md-slider-pressed-handle-color: CanvasText;
    --md-slider-pressed-state-layer-color: Canvas;
    --md-slider-pressed-state-layer-opacity: 1;
    --md-slider-with-overlap-handle-outline-color: CanvasText;
    --md-slider-with-tick-marks-active-container-color: Canvas;
    --md-slider-with-tick-marks-disabled-container-color: GrayText;
    --md-slider-with-tick-marks-inactive-container-color: CanvasText;
    .label,
    .label:before {
      border: var(--_with-overlap-handle-outline-color) solid
        var(--_with-overlap-handle-outline-width);
    }
    &:not(disabled) .track:before {
      border: 1px solid var(--_active-track-color);
    }
  }
}
